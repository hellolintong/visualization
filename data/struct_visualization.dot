digraph gph {Connv [label="struct: Conn\l\n----\lpackage: pool\l\nfile: conn.go\l----\lInited: bool\l\npooled: bool\l\ncreatedAt: time.Time\l\nusedAt: int64\l\nnetConn: net.Conn\l\nrd: *proto.Reader\l\nwr: *proto.Writer\l\n", shape="box"];
Statsv [label="struct: Stats\l\n----\lpackage: pool\l\nfile: pool.go\l----\lTimeouts: uint32\l\nTotalConns: uint32\l\nIdleConns: uint32\l\nStaleConns: uint32\l\nHits: uint32\l\nMisses: uint32\l\n", shape="box"];
Optionsv [label="struct: Options\l\n----\lpackage: pool\l\nfile: pool.go\l----\lMinIdleConns: int\l\nMaxConnAge: time.Duration\l\nPoolTimeout: time.Duration\l\nIdleTimeout: time.Duration\l\nIdleCheckFrequency: time.Duration\l\nDialer: func(context.Context) (net.Conn, error)\l\nOnClose: func(*Conn) error\l\nPoolSize: int\l\n", shape="box"];
ConnPoolv [label="struct: ConnPool\l\n----\lpackage: pool\l\nfile: pool.go\l----\lstats: Stats\l\nqueue: chan struct{}\l\nconns: []*Conn\l\npoolSize: int\l\nlastDialError: error\l\nconnsMu: sync.Mutex\l\nidleConns: []*Conn\l\nidleConnsLen: int\l\n_closed: uint32\l\nopt: *Options\l\ndialErrorsNum: uint32\l\nlastDialErrorMu: sync.RWMutex\l\nclosedCh: chan struct{}\l\n", shape="box"];
BadConnErrorv [label="struct: BadConnError\l\n----\lpackage: pool\l\nfile: pool_single.go\l----\lwrapped: error\l\n", shape="box"];
SingleConnPoolv [label="struct: SingleConnPool\l\n----\lpackage: pool\l\nfile: pool_single.go\l----\lpool: Pooler\l\nlevel: int32\l\nstate: uint32\l\nch: chan *Conn\l\n_badConnError: atomic.Value\l\n", shape="box"];
Poolerv [label="Pooler", shape="box"];
StickyConnPoolv [label="struct: StickyConnPool\l\n----\lpackage: pool\l\nfile: pool_sticky.go\l----\lcn: *Conn\l\nclosed: bool\l\nmu: sync.Mutex\l\npool: *ConnPool\l\nreusable: bool\l\n", shape="box"];
Poolerv [label="interface: Pooler\l\n----\lpackage: pool\l\nfile: pool.go\l-----\lPut(*Conn)\l\nRemove(*Conn, error)\l\nStats() *Stats\l\nClose() error\l\nCloseConn(*Conn) error\l\nGet(context.Context) (*Conn, error)\l\nLen() int\l\nIdleLen() int\l\nNewConn(context.Context) (*Conn, error)\l\n", shape="box"];
ConnPoolv->Connv [label="conns:[]*Conn"];
ConnPoolv->Optionsv [label="opt:*Options"];
ConnPoolv->Statsv [label="stats:Stats"];
SingleConnPoolv->Poolerv [label="pool:Pooler"];
SingleConnPoolv->Connv [label="ch:chan *Conn"];
StickyConnPoolv->ConnPoolv [label="pool:*ConnPool"];
StickyConnPoolv->Connv [label="cn:*Conn"];
}