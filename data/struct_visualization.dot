digraph gph {ClusterOptionsv [label="struct: ClusterOptions\l\n----\lpackage: redis\l\nfile: cluster.go\l----\lClusterSlots:func() ([]ClusterSlot, error)\l\n", shape="box"];
ClusterSlotv [label="struct: ClusterSlot\l\n----\lpackage: redis\l\nfile: command.go\l----\lNodes:[]ClusterNode\l\n", shape="box"];
clusterNodesv [label="struct: clusterNodes\l\n----\lpackage: redis\l\nfile: cluster.go\l----\lopt:*ClusterOptions\l\nallNodes:map[string]*clusterNode\l\n", shape="box"];
clusterNodev [label="struct: clusterNode\l\n----\lpackage: redis\l\nfile: cluster.go\l----\lClient:*Client\l\n", shape="box"];
clusterStatev [label="struct: clusterState\l\n----\lpackage: redis\l\nfile: cluster.go\l----\lSlaves:[]*clusterNode\l\nslots:[]*clusterSlot\l\nnodes:*clusterNodes\l\n", shape="box"];
clusterSlotv [label="struct: clusterSlot\l\n----\lpackage: redis\l\nfile: cluster.go\l----\lnodes:[]*clusterNode\l\n", shape="box"];
clusterClientv [label="struct: clusterClient\l\n----\lpackage: redis\l\nfile: cluster.go\l----\lstate:*clusterStateHolder\l\ncmdsInfoCache:*cmdsInfoCache\l\nopt:*ClusterOptions\l\nnodes:*clusterNodes\l\n", shape="box"];
clusterStateHolderv [label="struct: clusterStateHolder\l\n----\lpackage: redis\l\nfile: cluster.go\l----\l", shape="box"];
cmdsInfoCachev [label="struct: cmdsInfoCache\l\n----\lpackage: redis\l\nfile: command.go\l----\lfn:func() (map[string]*CommandInfo, error)\l\n", shape="box"];
ClusterClientv [label="struct: ClusterClient\l\n----\lpackage: redis\l\nfile: cluster.go\l----\lhooks:hooks\l\n*clusterClient:*clusterClient\l\n", shape="box"];
hooksv [label="struct: hooks\l\n----\lpackage: redis\l\nfile: redis.go\l----\lhooks:[]Hook\l\n", shape="box"];
cmdsMapv [label="struct: cmdsMap\l\n----\lpackage: redis\l\nfile: cluster.go\l----\lm:map[*clusterNode][]Cmder\l\nm:map[*clusterNode][]Cmder\l\n", shape="box"];
Cmderv [label="Cmder", shape="box"];
Clientv [label="struct: Client\l\n----\lpackage: redis\l\nfile: redis.go\l----\lhooks:hooks\l\nbaseClient:baseClient\l\n", shape="box"];
StatusCmdv [label="struct: StatusCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\n", shape="box"];
baseCmdv [label="struct: baseCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\l", shape="box"];
StringStructMapCmdv [label="struct: StringStructMapCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\n", shape="box"];
GeoPosCmdv [label="struct: GeoPosCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\nval:[]*GeoPos\l\n", shape="box"];
GeoPosv [label="struct: GeoPos\l\n----\lpackage: redis\l\nfile: command.go\l----\l", shape="box"];
Cmdv [label="struct: Cmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\n", shape="box"];
StringSliceCmdv [label="struct: StringSliceCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\n", shape="box"];
XStreamv [label="struct: XStream\l\n----\lpackage: redis\l\nfile: command.go\l----\lMessages:[]XMessage\l\n", shape="box"];
XMessagev [label="struct: XMessage\l\n----\lpackage: redis\l\nfile: command.go\l----\l", shape="box"];
ZWithKeyCmdv [label="struct: ZWithKeyCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lval:*ZWithKey\l\nbaseCmd:baseCmd\l\n", shape="box"];
ZWithKeyv [label="struct: ZWithKey\l\n----\lpackage: redis\l\nfile: commands.go\l----\lZ:Z\l\n", shape="box"];
ClusterSlotsCmdv [label="struct: ClusterSlotsCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\nval:[]ClusterSlot\l\n", shape="box"];
IntCmdv [label="struct: IntCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\n", shape="box"];
IntSliceCmdv [label="struct: IntSliceCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\n", shape="box"];
TimeCmdv [label="struct: TimeCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\n", shape="box"];
XPendingExtCmdv [label="struct: XPendingExtCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lval:[]XPendingExt\l\nbaseCmd:baseCmd\l\n", shape="box"];
XPendingExtv [label="struct: XPendingExt\l\n----\lpackage: redis\l\nfile: command.go\l----\l", shape="box"];
SliceCmdv [label="struct: SliceCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\n", shape="box"];
CommandsInfoCmdv [label="struct: CommandsInfoCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lval:map[string]*CommandInfo\l\nbaseCmd:baseCmd\l\n", shape="box"];
CommandInfov [label="struct: CommandInfo\l\n----\lpackage: redis\l\nfile: command.go\l----\l", shape="box"];
StringIntMapCmdv [label="struct: StringIntMapCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\n", shape="box"];
XMessageSliceCmdv [label="struct: XMessageSliceCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lval:[]XMessage\l\nbaseCmd:baseCmd\l\n", shape="box"];
FloatCmdv [label="struct: FloatCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\n", shape="box"];
StringCmdv [label="struct: StringCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\n", shape="box"];
StringStringMapCmdv [label="struct: StringStringMapCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\n", shape="box"];
ScanCmdv [label="struct: ScanCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\n", shape="box"];
ClusterNodev [label="struct: ClusterNode\l\n----\lpackage: redis\l\nfile: command.go\l----\l", shape="box"];
BoolCmdv [label="struct: BoolCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\n", shape="box"];
XPendingCmdv [label="struct: XPendingCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\nval:*XPending\l\n", shape="box"];
XPendingv [label="struct: XPending\l\n----\lpackage: redis\l\nfile: command.go\l----\l", shape="box"];
XInfoGroupsCmdv [label="struct: XInfoGroupsCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\nval:[]XInfoGroups\l\n", shape="box"];
XInfoGroupsv [label="struct: XInfoGroups\l\n----\lpackage: redis\l\nfile: command.go\l----\l", shape="box"];
ZSliceCmdv [label="struct: ZSliceCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\nval:[]Z\l\n", shape="box"];
Zv [label="struct: Z\l\n----\lpackage: redis\l\nfile: commands.go\l----\l", shape="box"];
GeoLocationCmdv [label="struct: GeoLocationCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\nq:*GeoRadiusQuery\l\nlocations:[]GeoLocation\l\n", shape="box"];
GeoRadiusQueryv [label="struct: GeoRadiusQuery\l\n----\lpackage: redis\l\nfile: command.go\l----\l", shape="box"];
GeoLocationv [label="struct: GeoLocation\l\n----\lpackage: redis\l\nfile: command.go\l----\l", shape="box"];
BoolSliceCmdv [label="struct: BoolSliceCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\n", shape="box"];
XStreamSliceCmdv [label="struct: XStreamSliceCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\nval:[]XStream\l\n", shape="box"];
DurationCmdv [label="struct: DurationCmd\l\n----\lpackage: redis\l\nfile: command.go\l----\lbaseCmd:baseCmd\l\n", shape="box"];
ScanIteratorv [label="struct: ScanIterator\l\n----\lpackage: redis\l\nfile: iterator.go\l----\lcmd:*ScanCmd\l\n", shape="box"];
Pipelinev [label="struct: Pipeline\l\n----\lpackage: redis\l\nfile: pipeline.go\l----\lcmds:[]Cmder\l\n", shape="box"];
PubSubv [label="struct: PubSub\l\n----\lpackage: redis\l\nfile: pubsub.go\l----\lcmd:*Cmd\l\nmsgCh:chan *Message\l\nopt:*Options\l\n", shape="box"];
Messagev [label="struct: Message\l\n----\lpackage: redis\l\nfile: pubsub.go\l----\l", shape="box"];
Optionsv [label="struct: Options\l\n----\lpackage: redis\l\nfile: options.go\l----\l", shape="box"];
Hookv [label="Hook", shape="box"];
baseClientv [label="struct: baseClient\l\n----\lpackage: redis\l\nfile: redis.go\l----\llimiter:Limiter\l\nopt:*Options\l\n", shape="box"];
Limiterv [label="Limiter", shape="box"];
connv [label="struct: conn\l\n----\lpackage: redis\l\nfile: redis.go\l----\lbaseClient:baseClient\l\n", shape="box"];
Connv [label="struct: Conn\l\n----\lpackage: redis\l\nfile: redis.go\l----\l*conn:*conn\l\n", shape="box"];
ringShardv [label="struct: ringShard\l\n----\lpackage: redis\l\nfile: ring.go\l----\lClient:*Client\l\n", shape="box"];
ringShardsv [label="struct: ringShards\l\n----\lpackage: redis\l\nfile: ring.go\l----\lshards:map[string]*ringShard\l\nopt:*RingOptions\l\n", shape="box"];
RingOptionsv [label="struct: RingOptions\l\n----\lpackage: redis\l\nfile: ring.go\l----\l", shape="box"];
ringv [label="struct: ring\l\n----\lpackage: redis\l\nfile: ring.go\l----\lopt:*RingOptions\l\nshards:*ringShards\l\ncmdsInfoCache:*cmdsInfoCache\l\n", shape="box"];
Ringv [label="struct: Ring\l\n----\lpackage: redis\l\nfile: ring.go\l----\l*ring:*ring\l\nhooks:hooks\l\n", shape="box"];
SentinelClientv [label="struct: SentinelClient\l\n----\lpackage: redis\l\nfile: sentinel.go\l----\l*baseClient:*baseClient\l\n", shape="box"];
sentinelFailoverv [label="struct: sentinelFailover\l\n----\lpackage: redis\l\nfile: sentinel.go\l----\lsentinel:*SentinelClient\l\npubsub:*PubSub\l\nopt:*Options\l\n", shape="box"];
Txv [label="struct: Tx\l\n----\lpackage: redis\l\nfile: tx.go\l----\lbaseClient:baseClient\l\n", shape="box"];
Cmderv [label="interface: Cmder\l\n----\lpackage: redis\l\nfile: command.go", shape="box"];
Cmdablev [label="interface: Cmdable\l\n----\lpackage: redis\l\nfile: commands.go", shape="box"];
StatefulCmdablev [label="interface: StatefulCmdable\l\n----\lpackage: redis\l\nfile: commands.go", shape="box"];
Limiterv [label="interface: Limiter\l\n----\lpackage: redis\l\nfile: options.go", shape="box"];
Pipelinerv [label="interface: Pipeliner\l\n----\lpackage: redis\l\nfile: pipeline.go", shape="box"];
Hookv [label="interface: Hook\l\n----\lpackage: redis\l\nfile: redis.go", shape="box"];
scripterv [label="interface: scripter\l\n----\lpackage: redis\l\nfile: script.go", shape="box"];
UniversalClientv [label="interface: UniversalClient\l\n----\lpackage: redis\l\nfile: universal.go", shape="box"];
clusterStatev->clusterSlotv [label="slots:[]*clusterSlot"];
clusterStatev->clusterNodesv [label="nodes:*clusterNodes"];
clusterStatev->clusterNodev [label="Slaves:[]*clusterNode"];
clusterClientv->clusterStateHolderv [label="state:*clusterStateHolder"];
clusterClientv->cmdsInfoCachev [label="cmdsInfoCache:*cmdsInfoCache"];
clusterClientv->ClusterOptionsv [label="opt:*ClusterOptions"];
clusterClientv->clusterNodesv [label="nodes:*clusterNodes"];
ClusterClientv->hooksv [label="hooks:hooks"];
ClusterClientv->clusterClientv [label="*clusterClient:*clusterClient"];
cmdsMapv->Cmderv [label="m:map[*clusterNode][]Cmder"];
cmdsMapv->clusterNodev [label="m:map[*clusterNode][]Cmder"];
ClusterOptionsv->ClusterSlotv [label="ClusterSlots:func() ([]ClusterSlot, error)"];
clusterNodesv->ClusterOptionsv [label="opt:*ClusterOptions"];
clusterNodesv->clusterNodev [label="allNodes:map[string]*clusterNode"];
clusterNodev->Clientv [label="Client:*Client"];
clusterSlotv->clusterNodev [label="nodes:[]*clusterNode"];
BoolCmdv->baseCmdv [label="baseCmd:baseCmd"];
StringCmdv->baseCmdv [label="baseCmd:baseCmd"];
StringStringMapCmdv->baseCmdv [label="baseCmd:baseCmd"];
ScanCmdv->baseCmdv [label="baseCmd:baseCmd"];
ClusterSlotv->ClusterNodev [label="Nodes:[]ClusterNode"];
XPendingCmdv->baseCmdv [label="baseCmd:baseCmd"];
XPendingCmdv->XPendingv [label="val:*XPending"];
XInfoGroupsCmdv->baseCmdv [label="baseCmd:baseCmd"];
XInfoGroupsCmdv->XInfoGroupsv [label="val:[]XInfoGroups"];
ZSliceCmdv->baseCmdv [label="baseCmd:baseCmd"];
ZSliceCmdv->Zv [label="val:[]Z"];
GeoLocationCmdv->GeoLocationv [label="locations:[]GeoLocation"];
GeoLocationCmdv->baseCmdv [label="baseCmd:baseCmd"];
GeoLocationCmdv->GeoRadiusQueryv [label="q:*GeoRadiusQuery"];
DurationCmdv->baseCmdv [label="baseCmd:baseCmd"];
BoolSliceCmdv->baseCmdv [label="baseCmd:baseCmd"];
XStreamSliceCmdv->baseCmdv [label="baseCmd:baseCmd"];
XStreamSliceCmdv->XStreamv [label="val:[]XStream"];
Cmdv->baseCmdv [label="baseCmd:baseCmd"];
StatusCmdv->baseCmdv [label="baseCmd:baseCmd"];
StringStructMapCmdv->baseCmdv [label="baseCmd:baseCmd"];
GeoPosCmdv->baseCmdv [label="baseCmd:baseCmd"];
GeoPosCmdv->GeoPosv [label="val:[]*GeoPos"];
StringSliceCmdv->baseCmdv [label="baseCmd:baseCmd"];
XStreamv->XMessagev [label="Messages:[]XMessage"];
ZWithKeyCmdv->ZWithKeyv [label="val:*ZWithKey"];
ZWithKeyCmdv->baseCmdv [label="baseCmd:baseCmd"];
ClusterSlotsCmdv->baseCmdv [label="baseCmd:baseCmd"];
ClusterSlotsCmdv->ClusterSlotv [label="val:[]ClusterSlot"];
SliceCmdv->baseCmdv [label="baseCmd:baseCmd"];
IntCmdv->baseCmdv [label="baseCmd:baseCmd"];
IntSliceCmdv->baseCmdv [label="baseCmd:baseCmd"];
TimeCmdv->baseCmdv [label="baseCmd:baseCmd"];
XPendingExtCmdv->baseCmdv [label="baseCmd:baseCmd"];
XPendingExtCmdv->XPendingExtv [label="val:[]XPendingExt"];
StringIntMapCmdv->baseCmdv [label="baseCmd:baseCmd"];
CommandsInfoCmdv->baseCmdv [label="baseCmd:baseCmd"];
CommandsInfoCmdv->CommandInfov [label="val:map[string]*CommandInfo"];
cmdsInfoCachev->CommandInfov [label="fn:func() (map[string]*CommandInfo, error)"];
FloatCmdv->baseCmdv [label="baseCmd:baseCmd"];
XMessageSliceCmdv->XMessagev [label="val:[]XMessage"];
XMessageSliceCmdv->baseCmdv [label="baseCmd:baseCmd"];
ZWithKeyv->Zv [label="Z:Z"];
ScanIteratorv->ScanCmdv [label="cmd:*ScanCmd"];
Pipelinev->Cmderv [label="cmds:[]Cmder"];
PubSubv->Cmdv [label="cmd:*Cmd"];
PubSubv->Messagev [label="msgCh:chan *Message"];
PubSubv->Optionsv [label="opt:*Options"];
hooksv->Hookv [label="hooks:[]Hook"];
baseClientv->Limiterv [label="limiter:Limiter"];
baseClientv->Optionsv [label="opt:*Options"];
Clientv->hooksv [label="hooks:hooks"];
Clientv->baseClientv [label="baseClient:baseClient"];
connv->baseClientv [label="baseClient:baseClient"];
Connv->connv [label="*conn:*conn"];
ringShardv->Clientv [label="Client:*Client"];
ringShardsv->ringShardv [label="shards:map[string]*ringShard"];
ringShardsv->RingOptionsv [label="opt:*RingOptions"];
ringv->RingOptionsv [label="opt:*RingOptions"];
ringv->ringShardsv [label="shards:*ringShards"];
ringv->cmdsInfoCachev [label="cmdsInfoCache:*cmdsInfoCache"];
Ringv->ringv [label="*ring:*ring"];
Ringv->hooksv [label="hooks:hooks"];
SentinelClientv->baseClientv [label="*baseClient:*baseClient"];
sentinelFailoverv->SentinelClientv [label="sentinel:*SentinelClient"];
sentinelFailoverv->PubSubv [label="pubsub:*PubSub"];
sentinelFailoverv->Optionsv [label="opt:*Options"];
Txv->baseClientv [label="baseClient:baseClient"];
}