digraph gph {
Cache [label="package:collapsar \l file:cache.go \l struct:Cache \l ", shape="box"];Cache_clearExpiredItems [label="function:clearExpiredItems", shape="box"];
Nodev [label="package:collapsar \l file:storage.go \l struct:Node", shape="box"];
Cache_hash [label="function:hash", shape="box"];
AdlerHashv [label="package:hash \l file:adler_hash.go \l struct:AdlerHash", shape="box"];
Cache_AddWithTTL [label="function:AddWithTTL", shape="box"];
Cache_TTL [label="function:TTL", shape="box"];
Cache_Get [label="function:Get", shape="box"];
Node_Get [label="function:Get", shape="box"];
Node_get [label="function:get", shape="box"];
LFUEliminatev [label="package:policy \l file:LFU.go \l struct:LFUEliminate", shape="box"];
LRUEliminatev [label="package:policy \l file:LRU.go \l struct:LRUEliminate", shape="box"];
Node_remove [label="function:remove", shape="box"];
Node_clearExpire [label="function:clearExpire", shape="box"];
Node_Add [label="function:Add", shape="box"];
Itemv [label="package:collapsar \l file:storage.go \l struct:Item", shape="box"];
LFUEliminate_AddKey [label="function:AddKey", shape="box"];
EliminateContainerv [label="package:policy \l file:eliminate_container.go \l struct:EliminateContainer", shape="box"];
LFUEliminate_RemoveKey [label="function:RemoveKey", shape="box"];
LFUEliminate_AccessKey [label="function:AccessKey", shape="box"];
LFUEliminate_Eliminate [label="function:Eliminate", shape="box"];
LFUEliminate_NeedEliminate [label="function:NeedEliminate", shape="box"];
LRUEliminate_AddKey [label="function:AddKey", shape="box"];
LRUEliminate_RemoveKey [label="function:RemoveKey", shape="box"];
LRUEliminate_AccessKey [label="function:AccessKey", shape="box"];
LRUEliminate_Eliminate [label="function:Eliminate", shape="box"];
LRUEliminate_NeedEliminate [label="function:NeedEliminate", shape="box"];
Cachev->Cache_Get [style="dashed"];
Cache_Get->Nodev;
Cachev->Cache_hash [style="dashed"];
Cache_hash->AdlerHashv;
Cachev->Cache_AddWithTTL [style="dashed"];
Cache_AddWithTTL->Nodev;
Cachev->Cache_TTL [style="dashed"];
Cache_TTL->Nodev;
Cachev->Cache_clearExpiredItems [style="dashed"];
Cache_clearExpiredItems->Nodev;
Nodev->Node_get [style="dashed"];
Node_get->LFUEliminatev;
Node_get->LRUEliminatev;
Nodev->Node_remove [style="dashed"];
Node_remove->LFUEliminatev;
Node_remove->LRUEliminatev;
Nodev->Node_Get [style="dashed"];
Node_Get->Cachev;
Nodev->Node_Add [style="dashed"];
Node_Add->LRUEliminatev;
Node_Add->LFUEliminatev;
Node_Add->Itemv;
Nodev->Node_clearExpire [style="dashed"];
Node_clearExpire->LFUEliminatev;
Node_clearExpire->LRUEliminatev;
LFUEliminatev->LFUEliminate_NeedEliminate [style="dashed"];
LFUEliminate_NeedEliminate->EliminateContainerv;
LFUEliminatev->LFUEliminate_AddKey [style="dashed"];
LFUEliminate_AddKey->EliminateContainerv;
LFUEliminatev->LFUEliminate_RemoveKey [style="dashed"];
LFUEliminate_RemoveKey->EliminateContainerv;
LFUEliminatev->LFUEliminate_AccessKey [style="dashed"];
LFUEliminate_AccessKey->EliminateContainerv;
LFUEliminatev->LFUEliminate_Eliminate [style="dashed"];
LFUEliminate_Eliminate->EliminateContainerv;
LRUEliminatev->LRUEliminate_AddKey [style="dashed"];
LRUEliminate_AddKey->EliminateContainerv;
LRUEliminatev->LRUEliminate_RemoveKey [style="dashed"];
LRUEliminate_RemoveKey->EliminateContainerv;
LRUEliminatev->LRUEliminate_AccessKey [style="dashed"];
LRUEliminate_AccessKey->EliminateContainerv;
LRUEliminatev->LRUEliminate_Eliminate [style="dashed"];
LRUEliminate_Eliminate->EliminateContainerv;
LRUEliminatev->LRUEliminate_NeedEliminate [style="dashed"];
LRUEliminate_NeedEliminate->EliminateContainerv;
}